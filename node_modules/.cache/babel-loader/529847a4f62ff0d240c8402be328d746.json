{"ast":null,"code":"var _jsxFileName = \"D:\\\\React.JS Tuts\\\\newsapp\\\\src\\\\components\\\\news.js\";\nimport React, { Component } from \"react\";\nimport Newitem from \"./newitem\";\nimport Masonry from \"react-masonry-css\";\nimport Spinner from \"./Spinner\";\nimport PropTypes from \"prop-types\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport ScrollToTop from \"react-scroll-to-top\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class news extends Component {\n  constructor() {\n    super();\n\n    this.fetchMoreData = async () => {\n      let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&sortBy=publishedAt&apiKey=f9aa6d33d92045f7b656982d9957fe8b\n    &page=${this.state.page}&pageSize=${this.props.pageSize}`;\n      this.setState({\n        loading: true\n      });\n      let data = await fetch(url);\n      let parsedData = await data.json();\n      this.setState({\n        news: this.state.news.concat(parsedData.articles),\n        page: this.state.page + 1,\n        totalResults: parsedData.totalResults,\n        loading: false\n      });\n    };\n\n    this.state = {\n      news: [],\n      loading: false,\n      page: 1,\n      totalResults: 0\n    };\n  }\n\n  async updateNews() {\n    this.props.setProgress(30);\n    let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&sortBy=publishedAt&apiKey=f9aa6d33d92045f7b656982d9957fe8b\n    &page=${this.state.page}&pageSize=${this.props.pageSize}`;\n    this.props.setProgress(70);\n    this.setState({\n      loading: true\n    });\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    this.props.setProgress(0);\n    this.setState({\n      news: parsedData.articles,\n      page: this.state.page + 1,\n      totalResults: parsedData.totalResults,\n      loading: false\n    });\n    document.title = \"DiemFlash - \" + this.props.category.charAt(0).toUpperCase() + this.props.category.slice(1);\n    this.props.setProgress(100);\n  }\n\n  async componentDidMount() {\n    this.updateNews();\n  }\n\n  render() {\n    const breakpointColumnsObj = {\n      default: 4,\n      1100: 3,\n      700: 2,\n      500: 1\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"Top-Headlines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), \" - \", this.props.category.charAt(0).toUpperCase() + this.props.category.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: this.state.news.length,\n        next: this.fetchMoreData,\n        hasMore: this.state.news.length !== this.state.totalResults,\n        loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Masonry, {\n            breakpointCols: breakpointColumnsObj,\n            className: \"my-masonry-grid row\",\n            columnClassName: \"my-masonry-grid_column\",\n            children: this.state.news.map(element => {\n              return /*#__PURE__*/_jsxDEV(Newitem, {\n                title: element.title ? element.title.length > 80 ? element.title.slice(0, 80) + \"...\" : element.title : \"\",\n                description: element.description ? element.source.name === \"PRNewswire\" ? element.description.slice(element.description.indexOf(\"--\") + 2, 138) : element.description.slice(0, 90) : \"\",\n                url: element.url,\n                urlImage: element.urlToImage,\n                idName: element.source.name,\n                time: element.publishedAt.slice(0, 10) + \" \" + element.publishedAt.slice(11, 18),\n                author: element.author ? element.author : \"Unknown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollToTop, {\n        smooth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nnews.defaultProps = {\n  country: \"in\",\n  pageSize: 12,\n  category: \"technology\"\n};\nnews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default news;","map":{"version":3,"sources":["D:/React.JS Tuts/newsapp/src/components/news.js"],"names":["React","Component","Newitem","Masonry","Spinner","PropTypes","InfiniteScroll","ScrollToTop","news","constructor","fetchMoreData","url","props","country","category","state","page","pageSize","setState","loading","data","fetch","parsedData","json","concat","articles","totalResults","updateNews","setProgress","document","title","charAt","toUpperCase","slice","componentDidMount","render","breakpointColumnsObj","default","length","map","element","description","source","name","indexOf","urlToImage","publishedAt","author","defaultProps","propTypes","string","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;;AAEA,OAAO,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAalCQ,EAAAA,WAAW,GAAG;AACZ;;AADY,SAkCdC,aAlCc,GAkCE,YAAY;AAC1B,UAAIC,GAAG,GAAI,gDAA+C,KAAKC,KAAL,CAAWC,OAAQ,aAAY,KAAKD,KAAL,CAAWE,QAAS;AACjH,YAAY,KAAKC,KAAL,CAAWC,IAAK,aAAY,KAAKJ,KAAL,CAAWK,QAAS,EADxD;AAEA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,UAAIC,IAAI,GAAG,MAAMC,KAAK,CAACV,GAAD,CAAtB;AACA,UAAIW,UAAU,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAvB;AACA,WAAKL,QAAL,CAAc;AACZV,QAAAA,IAAI,EAAE,KAAKO,KAAL,CAAWP,IAAX,CAAgBgB,MAAhB,CAAuBF,UAAU,CAACG,QAAlC,CADM;AAEZT,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAX,GAAgB,CAFV;AAGZU,QAAAA,YAAY,EAAEJ,UAAU,CAACI,YAHb;AAIZP,QAAAA,OAAO,EAAE;AAJG,OAAd;AAMD,KA9Ca;;AAGZ,SAAKJ,KAAL,GAAa;AACXP,MAAAA,IAAI,EAAE,EADK;AAEXW,MAAAA,OAAO,EAAE,KAFE;AAGXH,MAAAA,IAAI,EAAE,CAHK;AAIXU,MAAAA,YAAY,EAAE;AAJH,KAAb;AAMD;;AAEe,QAAVC,UAAU,GAAG;AACjB,SAAKf,KAAL,CAAWgB,WAAX,CAAuB,EAAvB;AACA,QAAIjB,GAAG,GAAI,gDAA+C,KAAKC,KAAL,CAAWC,OAAQ,aAAY,KAAKD,KAAL,CAAWE,QAAS;AACjH,YAAY,KAAKC,KAAL,CAAWC,IAAK,aAAY,KAAKJ,KAAL,CAAWK,QAAS,EADxD;AAEA,SAAKL,KAAL,CAAWgB,WAAX,CAAuB,EAAvB;AACA,SAAKV,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,QAAIC,IAAI,GAAG,MAAMC,KAAK,CAACV,GAAD,CAAtB;AACA,QAAIW,UAAU,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAvB;AACA,SAAKX,KAAL,CAAWgB,WAAX,CAAuB,CAAvB;AACA,SAAKV,QAAL,CAAc;AACZV,MAAAA,IAAI,EAAEc,UAAU,CAACG,QADL;AAEZT,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAX,GAAgB,CAFV;AAGZU,MAAAA,YAAY,EAAEJ,UAAU,CAACI,YAHb;AAIZP,MAAAA,OAAO,EAAE;AAJG,KAAd;AAMAU,IAAAA,QAAQ,CAACC,KAAT,GAAiB,iBAAiB,KAAKlB,KAAL,CAAWE,QAAX,CAAoBiB,MAApB,CAA2B,CAA3B,EAA8BC,WAA9B,EAAjB,GAA6D,KAAKpB,KAAL,CAAWE,QAAX,CAAoBmB,KAApB,CAA0B,CAA1B,CAA9E;AACA,SAAKrB,KAAL,CAAWgB,WAAX,CAAuB,GAAvB;AACD;;AAEsB,QAAjBM,iBAAiB,GAAG;AACxB,SAAKP,UAAL;AACD;;AAeDQ,EAAAA,MAAM,GAAG;AACP,UAAMC,oBAAoB,GAAG;AAC3BC,MAAAA,OAAO,EAAE,CADkB;AAE3B,YAAM,CAFqB;AAG3B,WAAK,CAHsB;AAI3B,WAAK;AAJsB,KAA7B;AAOA,wBACE;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAA,kCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,SAE0B,KAAKzB,KAAL,CAAWE,QAAX,CAAoBiB,MAApB,CAA2B,CAA3B,EAA8BC,WAA9B,KAA4C,KAAKpB,KAAL,CAAWE,QAAX,CAAoBmB,KAApB,CAA0B,CAA1B,CAFtE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAOE,QAAC,cAAD;AACE,QAAA,UAAU,EAAE,KAAKlB,KAAL,CAAWP,IAAX,CAAgB8B,MAD9B;AAEE,QAAA,IAAI,EAAE,KAAK5B,aAFb;AAGE,QAAA,OAAO,EAAE,KAAKK,KAAL,CAAWP,IAAX,CAAgB8B,MAAhB,KAA2B,KAAKvB,KAAL,CAAWW,YAHjD;AAIE,QAAA,MAAM,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAJV;AAAA,+BAME;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE,QAAC,OAAD;AACE,YAAA,cAAc,EAAEU,oBADlB;AAEE,YAAA,SAAS,EAAC,qBAFZ;AAGE,YAAA,eAAe,EAAC,wBAHlB;AAAA,sBAKG,KAAKrB,KAAL,CAAWP,IAAX,CAAgB+B,GAAhB,CAAqBC,OAAD,IAAa;AAChC,kCACE,QAAC,OAAD;AACE,gBAAA,KAAK,EACHA,OAAO,CAACV,KAAR,GACIU,OAAO,CAACV,KAAR,CAAcQ,MAAd,GAAuB,EAAvB,GACEE,OAAO,CAACV,KAAR,CAAcG,KAAd,CAAoB,CAApB,EAAuB,EAAvB,IAA6B,KAD/B,GAEEO,OAAO,CAACV,KAHd,GAII,EANR;AAQE,gBAAA,WAAW,EACTU,OAAO,CAACC,WAAR,GACID,OAAO,CAACE,MAAR,CAAeC,IAAf,KAAwB,YAAxB,GACEH,OAAO,CAACC,WAAR,CAAoBR,KAApB,CACEO,OAAO,CAACC,WAAR,CAAoBG,OAApB,CAA4B,IAA5B,IAAoC,CADtC,EAEE,GAFF,CADF,GAKEJ,OAAO,CAACC,WAAR,CAAoBR,KAApB,CAA0B,CAA1B,EAA6B,EAA7B,CANN,GAOI,EAhBR;AAkBE,gBAAA,GAAG,EAAEO,OAAO,CAAC7B,GAlBf;AAmBE,gBAAA,QAAQ,EAAE6B,OAAO,CAACK,UAnBpB;AAoBE,gBAAA,MAAM,EAAEL,OAAO,CAACE,MAAR,CAAeC,IApBzB;AAqBE,gBAAA,IAAI,EACFH,OAAO,CAACM,WAAR,CAAoBb,KAApB,CAA0B,CAA1B,EAA6B,EAA7B,IACA,GADA,GAEAO,OAAO,CAACM,WAAR,CAAoBb,KAApB,CAA0B,EAA1B,EAA8B,EAA9B,CAxBJ;AA0BE,gBAAA,MAAM,EAAEO,OAAO,CAACO,MAAR,GAAiBP,OAAO,CAACO,MAAzB,GAAkC;AA1B5C;AAAA;AAAA;AAAA;AAAA,sBADF;AA8BD,aA/BA;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAPF,eAsDI,QAAC,WAAD;AAAa,QAAA,MAAM;AAAnB;AAAA;AAAA;AAAA;AAAA,cAtDJ;AAAA,oBADF;AA2DD;;AA/HiC;AAAvBvC,I,CACJwC,Y,GAAe;AACpBnC,EAAAA,OAAO,EAAE,IADW;AAEpBI,EAAAA,QAAQ,EAAE,EAFU;AAGpBH,EAAAA,QAAQ,EAAE;AAHU,C;AADXN,I,CAOJyC,S,GAAY;AACjBpC,EAAAA,OAAO,EAAER,SAAS,CAAC6C,MADF;AAEjBjC,EAAAA,QAAQ,EAAEZ,SAAS,CAAC8C,MAFH;AAGjBrC,EAAAA,QAAQ,EAAET,SAAS,CAAC6C;AAHH,C;AA2HrB,eAAe1C,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Newitem from \"./newitem\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport Spinner from \"./Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\n\r\nexport class news extends Component {\r\n  static defaultProps = {\r\n    country: \"in\",\r\n    pageSize: 12,\r\n    category: \"technology\",\r\n  };\r\n\r\n  static propTypes = {\r\n    country: PropTypes.string,\r\n    pageSize: PropTypes.number,\r\n    category: PropTypes.string,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      news: [],\r\n      loading: false,\r\n      page: 1,\r\n      totalResults: 0,\r\n    };\r\n  }\r\n\r\n  async updateNews() {\r\n    this.props.setProgress(30)\r\n    let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&sortBy=publishedAt&apiKey=f9aa6d33d92045f7b656982d9957fe8b\r\n    &page=${this.state.page}&pageSize=${this.props.pageSize}`;\r\n    this.props.setProgress(70)\r\n    this.setState({ loading: true });    \r\n    let data = await fetch(url);\r\n    let parsedData = await data.json();\r\n    this.props.setProgress(0)\r\n    this.setState({\r\n      news: parsedData.articles,\r\n      page: this.state.page+1,\r\n      totalResults: parsedData.totalResults,\r\n      loading: false,\r\n    });\r\n    document.title = \"DiemFlash - \" + this.props.category.charAt(0).toUpperCase()+this.props.category.slice(1)\r\n    this.props.setProgress(100)\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.updateNews();\r\n  }\r\n\r\n  fetchMoreData = async () => {\r\n    let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&sortBy=publishedAt&apiKey=f9aa6d33d92045f7b656982d9957fe8b\r\n    &page=${this.state.page}&pageSize=${this.props.pageSize}`;\r\n    this.setState({ loading: true });\r\n    let data = await fetch(url);\r\n    let parsedData = await data.json();\r\n    this.setState({\r\n      news: this.state.news.concat(parsedData.articles),\r\n      page: this.state.page+1,\r\n      totalResults: parsedData.totalResults,\r\n      loading: false,\r\n    });\r\n  };\r\n  render() {\r\n    const breakpointColumnsObj = {\r\n      default: 4,\r\n      1100: 3,\r\n      700: 2,\r\n      500: 1,\r\n    };\r\n\r\n    return (\r\n      <>\r\n      <div className=\"container\">\r\n        <h1>\r\n          {/* <strong style={{ color: \"green\" }}>DiemFlash </strong> */}\r\n          <u>Top-Headlines</u> - {this.props.category.charAt(0).toUpperCase()+this.props.category.slice(1)}\r\n        </h1>\r\n        </div>\r\n        <InfiniteScroll\r\n          dataLength={this.state.news.length}\r\n          next={this.fetchMoreData}\r\n          hasMore={this.state.news.length !== this.state.totalResults}\r\n          loader={<Spinner />}\r\n        >\r\n          <div className=\"container\">\r\n            <Masonry\r\n              breakpointCols={breakpointColumnsObj}\r\n              className=\"my-masonry-grid row\"\r\n              columnClassName=\"my-masonry-grid_column\"\r\n            >\r\n              {this.state.news.map((element) => {\r\n                return (\r\n                  <Newitem\r\n                    title={\r\n                      element.title\r\n                        ? element.title.length > 80\r\n                          ? element.title.slice(0, 80) + \"...\"\r\n                          : element.title\r\n                        : \"\"\r\n                    }\r\n                    description={\r\n                      element.description\r\n                        ? element.source.name === \"PRNewswire\"\r\n                          ? element.description.slice(\r\n                              element.description.indexOf(\"--\") + 2,\r\n                              138\r\n                            )\r\n                          : element.description.slice(0, 90)\r\n                        : \"\"\r\n                    }\r\n                    url={element.url}\r\n                    urlImage={element.urlToImage}\r\n                    idName={element.source.name}\r\n                    time={\r\n                      element.publishedAt.slice(0, 10) +\r\n                      \" \" +\r\n                      element.publishedAt.slice(11, 18)\r\n                    }\r\n                    author={element.author ? element.author : \"Unknown\"}\r\n                  />\r\n                );\r\n              })}\r\n            </Masonry>\r\n          </div>\r\n        </InfiniteScroll>\r\n          <ScrollToTop smooth/>\r\n        \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default news;\r\n"]},"metadata":{},"sourceType":"module"}